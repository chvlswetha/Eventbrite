version: '3.4'

networks:
  frontend:
  backend:

services:
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1449:1433"
    container_name: eventsqlserver
    networks:
      - backend
 
  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1448:1433"
    container_name: eventtokensqlserver
    networks:
      - backend

  basket.data:
    image: redis
    ports:
      - "7050:6379"
    container_name: basketdata
    networks:
      - backend

  ordersqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1450:1433"
    container_name: eventordersqlserver
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend

  catalog:
    image: events/catalogapi
    build:
      context: .\ProductCatalogAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=EventDb;User Id=sa;Password=ProductApi(!);Connect Timeout=30;"
      ExternalBaseUrl: http://localhost:7000
    ports:
      - "7000:80"
    container_name: eventcatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: events/webmvc
    container_name: webshop
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
          max-size: "200k",
          max-file: "10"
      }    
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      EventUrl: http://catalog
      CartUrl: http://cart
      IdentityUrl: http://10.0.0.24:7800
      CallBackUrl: http://localhost:7500
      OrderUrl: http://order
      StripePublicKey: pk_test_51LdFCNL1UoLau7ZHpceQOVwMFigrbvPkfobO74efps1fScCHT18Fv4Gp08fuHdoIo4jczfMcXmROXLgIAgw636je00t8DBAuoW
      StripePrivateKey: sk_test_51LdFCNL1UoLau7ZH2f9A25rQv0qNAd1yKN2MxsD01M3gXk3zQ98ezULmBIBLd2UzGV50lIAFcJvMQPdtGZ44ltZr00TuzQPrsL
    ports:
      - "7500:80"
    networks:
        - frontend
    depends_on:
      - catalog
      - tokenserver
      - cart
      - order

  tokenserver:
    image: events/tokenapi
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User Id=sa;Password=ProductApi(!);Connect Timeout=30;"
      MvcClient: http://localhost:7500
    ports:
      - "7800:80"
    container_name: eventtokenapi

    networks:
      - frontend
      - backend
    depends_on:
      - tokensqlserver

  cart:
    image: events/cartapi
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://10.0.0.24:7800
      ConnectionString: basket.data
    ports:
      - "7010:80"
    container_name: eventscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - basket.data
      - rabbitmq

  order:
    image: events/orderapi
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://10.0.0.24:7800
      ConnectionString: "Data Source=ordersqlserver;Initial Catalog=OrdersDb;User Id=sa;Password=ProductApi(!);Connect Timeout=30;"
    ports:
      - "7020:80"
    container_name: eventsorderapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - ordersqlserver
      - rabbitmq
     

      
      

